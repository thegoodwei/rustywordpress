extern crate wasm_bindgen;
use wasm_bindgen::prelude::*;

#[derive(Clone, Debug)]
struct Video {
    title: String,
    description: String,
    url: String,
    videoThumbnail: String,
}

#[wasm_bindgen]
pub fn generate_video_html(video: &Video) -> Result<String, String> {
    // Check if the video is missing any required fields
    if video.title.is_empty() || video.description.is_empty() || video.url.is_empty() {
        return Err("Video is missing required fields".to_string());
    }

    // Generate the HTML for the video
    let html = format!("
        <div class='video'>
            <h2>{}</h2>
            <video src='{}' controls></video>
            <p>{}</p>
        </div>
    ", video.title, video.url, video.description);
    Ok(html)
}

#[wasm_bindgen]
pub fn generate_thumbnail_html(video: &Video) -> Result<String, String> {
    // Check if the video is missing any required fields
    if video.title.is_empty() || video.description.is_empty() || video.url.is_empty() || video.videoThumbnail.is_empty() {
        return Err("Video is missing required fields".to_string());
    }

    // Generate the HTML for the thumbnail
    let html = format!("
        <div class='thumbnail'>
            <img src='{}' alt='{}'>
            <h3>{}</h3>
        </div>
    ", video.videoThumbnail, video.title, video.title);
    Ok(html)
}

#[wasm_bindgen]
pub fn generate_thumbnail_gallery_html(videos: &[Video], current_index: usize) -> Result<String, String> {
    let mut html = String::new();
    // Generate the HTML for each thumbnail in the gallery, skipping the current video
    for (i, video) in videos.iter().enumerate() {
        if i == current_index {
            continue;
        }

        let thumbnail_html = generate_thumbnail_html(video)?;
        html.push_str(&thumbnail_html);
    }

    Ok(html)
}

#[wasm_bindgen]
pub fn generate_video_gallery_html(videos: &[Video], current_index: usize) -> Result<String, String> {
    // Generate the HTML for the video and thumbnail gallery
    let video_html = generate_video_html(&videos[current_index])?;
    let thumbnail_html = generate_thumbnail_gallery_html(videos, current_index)?;
    let html = format!("{}{}", video_html, thumbnail_html);
    Ok(html)
}

#[wasm_bindgen]
pub fn generate_video_gallery(videos:

